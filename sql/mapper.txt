UPDATE LC_TSTATICSHARE_LIQ A, (
            SELECT T.VC_TENANT_ID,
            T.VC_CUST_NO,
            NVL(B.EN_INCOME,0) EN_INCOME,
            NVL(B.EN_FROZEN_INCOME,0) EN_FROZEN_INCOME,
            B.C_SHARE_CLASS,
            NVL(B.C_DIVIDEND_METHOD,T.C_DIVIDEND_METHOD) C_DIVIDEND_METHOD,
            NVL(B.EN_DAY_INCOME,0) EN_DAY_INCOME,
            NVL(B.EN_DAY_INCOME,0) EN_TOTAL_INCOME,
            CASE WHEN SIGN(NVL(B.EN_INCOME, 0)) = 1 THEN 0 ELSE 1 END C_INCOME_CARRY_FLAG,
            T.VC_FUND_ACCO,
            T.VC_TRADE_ACCO,
            T.VC_PRODUCT_CODE,
            T.C_SHARE_TYPE,
            T.C_CUST_TYPE,
            C.VC_TA_CODE
            FROM (
            SELECT A.VC_TENANT_ID,
            A.VC_CUST_NO,
            NVL(B.C_CUST_TYPE,A.C_CUST_TYPE) C_CUST_TYPE,
            NVL(B.VC_FUND_ACCO,A.VC_FUND_ACCO) VC_FUND_ACCO,
            A.VC_TRADE_ACCO,
            A.VC_PRODUCT_CODE,
            A.C_SHARE_TYPE,
            NVL(B.VC_TA_CODE,A.VC_TA_CODE) VC_TA_CODE,
            NVL(A.EN_TOTAL_SHARE,0) + NVL(B.EN_TOTAL_SHARE,0) EN_TOTAL_SHARE,
            NVL(A.EN_FROZEN_SHARE,0) + NVL(B.EN_FROZEN_SHARE,0) EN_FROZEN_SHARE,
            NVL(B.C_DIVIDEND_METHOD,A.C_DIVIDEND_METHOD) C_DIVIDEND_METHOD,
            CASE WHEN NVL(B.EN_INCOME,0) = 0 THEN A.EN_INCOME ELSE B.EN_INCOME END EN_INCOME,
            NVL(B.EN_FROZEN_INCOME,A.EN_FROZEN_INCOME) EN_FROZEN_INCOME,
            CASE WHEN NVL(B.EN_DAY_INCOME,0) = 0 THEN A.EN_DAY_INCOME ELSE B.EN_DAY_INCOME END EN_DAY_INCOME,
            NVL(B.EN_TOTAL_INCOME,0) + NVL(A.EN_TOTAL_INCOME,0) EN_TOTAL_INCOME,
            NVL(B.C_INCOME_CARRY_FLAG,A.C_INCOME_CARRY_FLAG) C_INCOME_CARRY_FLAG,
            A.C_SHARE_CLASS
            FROM LC_TSTATICSHARE A
            INNER JOIN LC_TPRODUCTINFO C
            ON A.VC_TENANT_ID = C.VC_TENANT_ID
            AND A.VC_PRODUCT_CODE = C.VC_PRODUCT_CODE
            LEFT JOIN LC_TSTATICSHARE_LIQ B
            ON (A.VC_TENANT_ID = B.VC_TENANT_ID
            AND A.VC_TRADE_ACCO = B.VC_TRADE_ACCO
            AND A.VC_PRODUCT_CODE = B.VC_PRODUCT_CODE
            AND A.C_SHARE_TYPE = B.C_SHARE_TYPE)
            WHERE A.VC_TENANT_ID = #{tenantId,jdbcType=VARCHAR}
            AND (INSTR(#{selTaCode,jdbcType=VARCHAR}, C.VC_TA_CODE) > 0)
            ) T, LC_TSHARECOMP B, LC_TPRODUCTINFO C
            WHERE T.VC_TENANT_ID = B.VC_TENANT_ID
            AND T.VC_TENANT_ID = C.VC_TENANT_ID
            AND T.VC_FUND_ACCO = B.VC_FUND_ACCO
            AND T.VC_TRADE_ACCO = B.VC_TRADE_ACCO
            AND T.VC_PRODUCT_CODE = B.VC_PRODUCT_CODE
            AND T.C_SHARE_TYPE = B.C_SHARE_TYPE
            AND B.C_DETAIL_FLAG = '0'
            AND T.VC_PRODUCT_CODE = C.VC_PRODUCT_CODE
            AND (C.C_PRODUCT_TYPE = '2' OR (C.C_PRODUCT_TYPE = '9' and #{systemParam,jdbcType=VARCHAR} = '1')
            OR NVL(T.EN_INCOME, 0) <![CDATA[<>]]> NVL(B.EN_INCOME, 0)
            OR NVL(T.EN_DAY_INCOME, 0) <![CDATA[<>]]> NVL(B.EN_DAY_INCOME, 0)
            OR NVL(T.EN_TOTAL_SHARE, 0) <![CDATA[<>]]> NVL(B.EN_TOTAL_SHARE, 0)
            OR NVL(T.EN_FROZEN_SHARE, 0) <![CDATA[<>]]> NVL(B.EN_FROZEN_SHARE, 0)
            OR NVL(T.C_DIVIDEND_METHOD, '0') <![CDATA[<>]]> NVL(B.C_DIVIDEND_METHOD, '0'))
            AND (INSTR(#{selTaCode,jdbcType=VARCHAR}, B.VC_TA_CODE) > 0)
            ) B
        SET A.EN_INCOME = B.EN_INCOME,
            A.EN_FROZEN_INCOME = B.EN_FROZEN_INCOME,
            A.C_SHARE_CLASS = B.C_SHARE_CLASS,
            A.C_DIVIDEND_METHOD = B.C_DIVIDEND_METHOD,
            A.VC_LAST_DATE = #{lastDate,jdbcType=VARCHAR},
            A.EN_DAY_INCOME = B.EN_DAY_INCOME,
            A.EN_TOTAL_INCOME = B.EN_TOTAL_INCOME,
            A.C_INCOME_CARRY_FLAG = B.C_INCOME_CARRY_FLAG
        WHERE A.VC_TENANT_ID = B.VC_TENANT_ID
          AND A.VC_TRADE_ACCO = B.VC_TRADE_ACCO
          AND A.VC_PRODUCT_CODE = B.VC_PRODUCT_CODE
          AND A.C_SHARE_TYPE = B.C_SHARE_TYPE
          AND A.VC_TENANT_ID = #{tenantId,jdbcType=VARCHAR}